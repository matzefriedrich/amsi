namespace Windows.Security.AntiMalwareScan
{
    using System;
    using Interop;

    /// <summary>
    ///     Represents a session for Anti-Malware Scan Interface (AMSI).
    ///     This class provides methods to scan strings or byte buffers for malware within a particular session context.
    /// </summary>
    public sealed class AmsiSession : IDisposable
    {
        private readonly AmsiContext context;

        private AmsiSession(AmsiContext context, IntPtr session)
        {
            this.context = context;
            this.Handle = session;
        }

        /// <summary>
        ///     Gets the raw handle for the current AMSI session.
        ///     This handle is used internally to identify the particular session context when performing operations such as
        ///     scanning for malware.
        /// </summary>
        internal IntPtr Handle { get; }

        /// <summary>
        ///     Releases all resources used by the <see cref="AmsiSession" /> object.
        /// </summary>
        public void Dispose()
        {
            Amsi.AmsiCloseSession(this.context.Handle, this.Handle);
        }

        /// <summary>
        ///     Creates a new <see cref="AmsiSession" /> within the given <see cref="AmsiContext" />.
        /// </summary>
        /// <param name="context">The <see cref="AmsiContext" /> within which to create the session.</param>
        /// <returns>A new instance of <see cref="AmsiSession" />.</returns>
        /// <exception cref="AmsiException">Throws an <see cref="AmsiException" /> when the session could not be opened.</exception>
        /// <exception cref="ArgumentNullException">
        ///     Throws an <see cref="ArgumentNullException" /> when the provided context is
        ///     null.
        /// </exception>
        public static AmsiSession Create(AmsiContext context)
        {
            ArgumentNullException.ThrowIfNull(context);

            uint hr = Amsi.AmsiOpenSession(context.Handle, out IntPtr session);
            if (hr == CommonHResult.S_OK) return new AmsiSession(context, session);

            throw new AmsiException(hr);
        }

        /// <summary>
        ///     Scans a string for malware using the current AMSI session.
        /// </summary>
        /// <param name="string">The string content to be scanned.</param>
        /// <param name="contentName">The name associated with the content being scanned for reporting purposes.</param>
        /// <returns>
        ///     An <see cref="AmsiScanResult" /> indicating the result of the scan, such as whether the content is clean or should
        ///     be blocked.
        /// </returns>
        public AmsiScanResult Scan(string @string, string contentName)
        {
            return this.context.Scan(@string, contentName, this);
        }

        /// <summary>
        ///     Scans the given byte buffer for malware within the context of the current AMSI session.
        /// </summary>
        /// <param name="buffer">The byte array to be scanned for malware.</param>
        /// <param name="contentName">The name or description of the content being scanned.</param>
        /// <returns>An <see cref="AmsiScanResult" /> indicating the result of the malware scan.</returns>
        public AmsiScanResult Scan(byte[] buffer, string contentName)
        {
            return this.context.ScanBuffer(buffer, contentName, this);
        }
    }
}