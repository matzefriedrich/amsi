namespace Windows.Security.AntiMalwareScan
{
    using System;
    using Interop;

    public sealed class AmsiSession : IDisposable
    {
        private readonly AmsiContext context;

        private readonly IntPtr session;

        private AmsiSession(AmsiContext context, IntPtr session)
        {
            this.context = context;
            this.session = session;
        }

        internal IntPtr Handle => this.session;

        public void Dispose()
        {
            Amsi.AmsiCloseSession(this.context.Handle, this.session);
        }

        public static AmsiSession Create(AmsiContext context)
        {
            ArgumentNullException.ThrowIfNull(context);

            uint hr = Amsi.AmsiOpenSession(context.Handle, out IntPtr session);
            if (hr == CommonHResult.S_OK) return new AmsiSession(context, session);

            throw new AmsiException(hr);
        }

        public AmsiScanResult Scan(string @string, string contentName)
        {
            return this.context.Scan(@string, contentName, this);
        }

        public AmsiScanResult Scan(byte[] buffer, string contentName)
        {
            return this.context.ScanBuffer(buffer, contentName, this);
        }
    }
}